/*
use crate::{ReceiverStateMachine, ReceiverState};
use crate::protocols::denon::Denon;

#[test]
fn test_denon() {
    let input = &[0, 136, 65, 18, 16, 18, 15, 19, 49, 18, 15, 19, 48, 19, 15, 19, 48, 19, 15, 18,
        15, 19, 48, 19, 15, 19, 14, 19, 49, 18, 49, 18, 15, 19, 15, 19, 14, 19, 15, 19, 15, 18,
        15, 19, 15, 19, 14, 19, 48, 19, 15, 19, 49, 18, 16, 17, 16, 18, 16, 18, 16, 17, 16, 18,
        16, 18, 15, 18, 49, 18, 16, 17, 17, 17, 16, 18, 16, 17, 16, 18, 16, 18, 15, 18, 16, 17,
        17, 17, 16, 18, 16, 18, 15, 18, 16, 18, 49, 18, 16, 18, 2939,

        138, 65, 17, 16, 18, 16,
        18, 49, 18, 16, 17, 50, 18, 15, 18, 50, 17, 16, 18, 16, 17, 50, 17, 16, 18, 16, 17,
        18, 49, 18, 16, 16, 17, 18, 16, 18, 16, 17, 16, 19, 15, 18, 15, 18, 16, 17, 50, 19, 15, 19,
        48, 17, 16, 19, 15, 18, 15, 19, 15, 18, 16, 18, 15, 19, 15, 19, 48, 19, 14, 19, 15, 19, 15,
        19, 14, 19, 15, 19, 14, 19, 15, 19, 14, 19, 15, 19, 15, 18, 15, 19, 15, 19, 14, 20, 47, 19,
        15, 19, 2940,

        136, 65, 19, 15, 18, 15, 19, 49, 18, 15, 19, 48, 19, 15, 19, 48, 19, 15, 18,
        15, 19, 48, 19, 15, 18, 15, 19, 49, 18, 49, 18, 15, 19, 15, 19, 14, 19, 15, 19, 15, 18, 15,
        19, 15, 19, 14, 19, 48, 19, 15, 19, 48, 19, 15, 18,

        17, 16, 19, 15, 19, 15, 18, 15, 19, 49, 19, 15, 18, 16, 17, 16, 18, 16, 18,
        15, 18, 16, 19, 14, 18, 16, 18, 16, 17, 16, 18, 16, 18, 15, 18, 16, 18, 49, 18, 16, 18






    ];

    let mut denon: Denon = ReceiverStateMachine::for_samplerate(40_000);


    let mut edge = false;
    let mut tot = 0;

    for dist in input.iter() {
        edge = !edge;
        tot += dist;
        let state = denon.event(edge, tot);

        if let ReceiverState::Done(_) = state {
            println!("denon: {:#050b}", denon.buf);
            println!("denon: {:0X}", denon.buf);
            denon.reset();
        }

    }

}
*/